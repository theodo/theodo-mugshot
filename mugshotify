#!/usr/bin/env python
import sys
import os
import argparse
import cv2
import numpy
import pymugshot

def float_pair(strinput):
    return [float(elt) for elt in strinput.split(',')]

def parseargs():
    parser = argparse.ArgumentParser()
    parser.add_argument('--imagesize', help='destination image size', type=int, default=140)
    parser.add_argument('--idealfacewidth', help='desired face width ratio', type=float, default=0.61803397)
    parser.add_argument('--idealeyecenter', help='desired eye center position', type=float_pair, default=(0.5, 0.46))
    parser.add_argument('input', help='input image')
    parser.add_argument('-o', '--output', help='output image')
    parser.add_argument('-r', '--recursive', help='process the whole directory')
    return parser.parse_args()

def main():
    args = parseargs()
    output_filename = args.output
    if args.recursive == 'true':
        recursive(args)
    else:
        if not output_filename:
            output_filename = 'mugshot_' + args.input

        pymugshot.mugshotify(args.input, output_filename, args.imagesize, args.idealfacewidth, args.idealeyecenter)


def recursive(args):
    output_dir = args.output
    for root, subFolders, files in os.walk(args.input):
        for file in files:
            underscore_position = file.find('_')
            output_filename = str(file)
            output_filename = output_filename[0:underscore_position] + '.png'
            output_filename = output_dir + output_filename
            print file, '->', output_filename
            try:
                pymugshot.mugshotify(os.path.join(root, file), output_filename, args.imagesize, args.idealfacewidth, args.idealeyecenter)
            except:
                print "Unexpected error:", sys.exc_info()[0]


if __name__ == "__main__":
    main()
